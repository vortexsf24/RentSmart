    async def load_postings(self):

        pool = await db.create_pool()
        try:
            async with pool.acquire() as conn:
                async with conn.cursor() as cur:
                    await cur.execute("SELECT * FROM postings LIMIT %s OFFSET %s", (self.limit, self.offset))
                    rows = await cur.fetchall()

            for row in rows:
                label = ctk.CTkLabel(self.scrollable_frame, text=f"Posting: {row[1]}")
                label.pack()
        except Exception as _ex:
            logger.error(_ex)

    def on_scroll(self, event):
        if self.canvas.yview()[1] >= 0.9:  # If scrolled near the bottom
            asyncio.create_task(self.load_postings())